// Generated by view binder compiler. Do not edit!
package com.example.ehealth.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.example.ehealth.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHospitalDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppbarLayoutBinding appbar;

  @NonNull
  public final Button btnHospitalDetailActivity;

  @NonNull
  public final LinearLayout llHospitalDetailActivityBottomNavigation;

  @NonNull
  public final LinearLayout llHospitalDetailActivityCall;

  @NonNull
  public final LinearLayout llHospitalDetailActivityEmail;

  @NonNull
  public final LinearLayout llHospitalDetailActivityHospital;

  @NonNull
  public final LinearLayout llHospitalDetailActivityHospitalContact;

  @NonNull
  public final RecyclerView rvHospitalDetailActivityDoctors;

  @NonNull
  public final TextView tvHospitalDetailActivityAddress;

  @NonNull
  public final TextView tvHospitalDetailActivityEmail;

  @NonNull
  public final TextView tvHospitalDetailActivityMobile;

  @NonNull
  public final TextView tvHospitalDetailActivityName;

  @NonNull
  public final ViewPager vpHospitalDetailActivityHospitals;

  private ActivityHospitalDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppbarLayoutBinding appbar, @NonNull Button btnHospitalDetailActivity,
      @NonNull LinearLayout llHospitalDetailActivityBottomNavigation,
      @NonNull LinearLayout llHospitalDetailActivityCall,
      @NonNull LinearLayout llHospitalDetailActivityEmail,
      @NonNull LinearLayout llHospitalDetailActivityHospital,
      @NonNull LinearLayout llHospitalDetailActivityHospitalContact,
      @NonNull RecyclerView rvHospitalDetailActivityDoctors,
      @NonNull TextView tvHospitalDetailActivityAddress,
      @NonNull TextView tvHospitalDetailActivityEmail,
      @NonNull TextView tvHospitalDetailActivityMobile,
      @NonNull TextView tvHospitalDetailActivityName,
      @NonNull ViewPager vpHospitalDetailActivityHospitals) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.btnHospitalDetailActivity = btnHospitalDetailActivity;
    this.llHospitalDetailActivityBottomNavigation = llHospitalDetailActivityBottomNavigation;
    this.llHospitalDetailActivityCall = llHospitalDetailActivityCall;
    this.llHospitalDetailActivityEmail = llHospitalDetailActivityEmail;
    this.llHospitalDetailActivityHospital = llHospitalDetailActivityHospital;
    this.llHospitalDetailActivityHospitalContact = llHospitalDetailActivityHospitalContact;
    this.rvHospitalDetailActivityDoctors = rvHospitalDetailActivityDoctors;
    this.tvHospitalDetailActivityAddress = tvHospitalDetailActivityAddress;
    this.tvHospitalDetailActivityEmail = tvHospitalDetailActivityEmail;
    this.tvHospitalDetailActivityMobile = tvHospitalDetailActivityMobile;
    this.tvHospitalDetailActivityName = tvHospitalDetailActivityName;
    this.vpHospitalDetailActivityHospitals = vpHospitalDetailActivityHospitals;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHospitalDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHospitalDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_hospital_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHospitalDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      View appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }
      AppbarLayoutBinding binding_appbar = AppbarLayoutBinding.bind(appbar);

      id = R.id.btnHospitalDetailActivity;
      Button btnHospitalDetailActivity = ViewBindings.findChildViewById(rootView, id);
      if (btnHospitalDetailActivity == null) {
        break missingId;
      }

      id = R.id.llHospitalDetailActivityBottomNavigation;
      LinearLayout llHospitalDetailActivityBottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (llHospitalDetailActivityBottomNavigation == null) {
        break missingId;
      }

      id = R.id.llHospitalDetailActivityCall;
      LinearLayout llHospitalDetailActivityCall = ViewBindings.findChildViewById(rootView, id);
      if (llHospitalDetailActivityCall == null) {
        break missingId;
      }

      id = R.id.llHospitalDetailActivityEmail;
      LinearLayout llHospitalDetailActivityEmail = ViewBindings.findChildViewById(rootView, id);
      if (llHospitalDetailActivityEmail == null) {
        break missingId;
      }

      id = R.id.llHospitalDetailActivityHospital;
      LinearLayout llHospitalDetailActivityHospital = ViewBindings.findChildViewById(rootView, id);
      if (llHospitalDetailActivityHospital == null) {
        break missingId;
      }

      id = R.id.llHospitalDetailActivityHospitalContact;
      LinearLayout llHospitalDetailActivityHospitalContact = ViewBindings.findChildViewById(rootView, id);
      if (llHospitalDetailActivityHospitalContact == null) {
        break missingId;
      }

      id = R.id.rvHospitalDetailActivityDoctors;
      RecyclerView rvHospitalDetailActivityDoctors = ViewBindings.findChildViewById(rootView, id);
      if (rvHospitalDetailActivityDoctors == null) {
        break missingId;
      }

      id = R.id.tvHospitalDetailActivityAddress;
      TextView tvHospitalDetailActivityAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvHospitalDetailActivityAddress == null) {
        break missingId;
      }

      id = R.id.tvHospitalDetailActivityEmail;
      TextView tvHospitalDetailActivityEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvHospitalDetailActivityEmail == null) {
        break missingId;
      }

      id = R.id.tvHospitalDetailActivityMobile;
      TextView tvHospitalDetailActivityMobile = ViewBindings.findChildViewById(rootView, id);
      if (tvHospitalDetailActivityMobile == null) {
        break missingId;
      }

      id = R.id.tvHospitalDetailActivityName;
      TextView tvHospitalDetailActivityName = ViewBindings.findChildViewById(rootView, id);
      if (tvHospitalDetailActivityName == null) {
        break missingId;
      }

      id = R.id.vpHospitalDetailActivityHospitals;
      ViewPager vpHospitalDetailActivityHospitals = ViewBindings.findChildViewById(rootView, id);
      if (vpHospitalDetailActivityHospitals == null) {
        break missingId;
      }

      return new ActivityHospitalDetailBinding((ConstraintLayout) rootView, binding_appbar,
          btnHospitalDetailActivity, llHospitalDetailActivityBottomNavigation,
          llHospitalDetailActivityCall, llHospitalDetailActivityEmail,
          llHospitalDetailActivityHospital, llHospitalDetailActivityHospitalContact,
          rvHospitalDetailActivityDoctors, tvHospitalDetailActivityAddress,
          tvHospitalDetailActivityEmail, tvHospitalDetailActivityMobile,
          tvHospitalDetailActivityName, vpHospitalDetailActivityHospitals);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
