// Generated by view binder compiler. Do not edit!
package com.example.ehealth.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.example.ehealth.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDoctorDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppbarLayoutBinding appbar;

  @NonNull
  public final ConstraintLayout clDoctorDetailActivityDoctor;

  @NonNull
  public final LinearLayout cvDoctorDetailActivityDoctor;

  @NonNull
  public final CardView cvDoctorDetailActivityImage;

  @NonNull
  public final ImageView ivDoctorDetailActivityImage;

  @NonNull
  public final TextView tvDoctorDetailActivity;

  @NonNull
  public final TextView tvDoctorDetailActivityEmail;

  @NonNull
  public final TextView tvDoctorDetailActivityMobile;

  @NonNull
  public final TextView tvDoctorDetailActivityName;

  @NonNull
  public final ViewPager vpDoctorDetailActivity;

  private ActivityDoctorDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppbarLayoutBinding appbar, @NonNull ConstraintLayout clDoctorDetailActivityDoctor,
      @NonNull LinearLayout cvDoctorDetailActivityDoctor,
      @NonNull CardView cvDoctorDetailActivityImage, @NonNull ImageView ivDoctorDetailActivityImage,
      @NonNull TextView tvDoctorDetailActivity, @NonNull TextView tvDoctorDetailActivityEmail,
      @NonNull TextView tvDoctorDetailActivityMobile, @NonNull TextView tvDoctorDetailActivityName,
      @NonNull ViewPager vpDoctorDetailActivity) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.clDoctorDetailActivityDoctor = clDoctorDetailActivityDoctor;
    this.cvDoctorDetailActivityDoctor = cvDoctorDetailActivityDoctor;
    this.cvDoctorDetailActivityImage = cvDoctorDetailActivityImage;
    this.ivDoctorDetailActivityImage = ivDoctorDetailActivityImage;
    this.tvDoctorDetailActivity = tvDoctorDetailActivity;
    this.tvDoctorDetailActivityEmail = tvDoctorDetailActivityEmail;
    this.tvDoctorDetailActivityMobile = tvDoctorDetailActivityMobile;
    this.tvDoctorDetailActivityName = tvDoctorDetailActivityName;
    this.vpDoctorDetailActivity = vpDoctorDetailActivity;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDoctorDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDoctorDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_doctor_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDoctorDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      View appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }
      AppbarLayoutBinding binding_appbar = AppbarLayoutBinding.bind(appbar);

      id = R.id.clDoctorDetailActivityDoctor;
      ConstraintLayout clDoctorDetailActivityDoctor = ViewBindings.findChildViewById(rootView, id);
      if (clDoctorDetailActivityDoctor == null) {
        break missingId;
      }

      id = R.id.cvDoctorDetailActivityDoctor;
      LinearLayout cvDoctorDetailActivityDoctor = ViewBindings.findChildViewById(rootView, id);
      if (cvDoctorDetailActivityDoctor == null) {
        break missingId;
      }

      id = R.id.cvDoctorDetailActivityImage;
      CardView cvDoctorDetailActivityImage = ViewBindings.findChildViewById(rootView, id);
      if (cvDoctorDetailActivityImage == null) {
        break missingId;
      }

      id = R.id.ivDoctorDetailActivityImage;
      ImageView ivDoctorDetailActivityImage = ViewBindings.findChildViewById(rootView, id);
      if (ivDoctorDetailActivityImage == null) {
        break missingId;
      }

      id = R.id.tvDoctorDetailActivity;
      TextView tvDoctorDetailActivity = ViewBindings.findChildViewById(rootView, id);
      if (tvDoctorDetailActivity == null) {
        break missingId;
      }

      id = R.id.tvDoctorDetailActivityEmail;
      TextView tvDoctorDetailActivityEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvDoctorDetailActivityEmail == null) {
        break missingId;
      }

      id = R.id.tvDoctorDetailActivityMobile;
      TextView tvDoctorDetailActivityMobile = ViewBindings.findChildViewById(rootView, id);
      if (tvDoctorDetailActivityMobile == null) {
        break missingId;
      }

      id = R.id.tvDoctorDetailActivityName;
      TextView tvDoctorDetailActivityName = ViewBindings.findChildViewById(rootView, id);
      if (tvDoctorDetailActivityName == null) {
        break missingId;
      }

      id = R.id.vpDoctorDetailActivity;
      ViewPager vpDoctorDetailActivity = ViewBindings.findChildViewById(rootView, id);
      if (vpDoctorDetailActivity == null) {
        break missingId;
      }

      return new ActivityDoctorDetailBinding((ConstraintLayout) rootView, binding_appbar,
          clDoctorDetailActivityDoctor, cvDoctorDetailActivityDoctor, cvDoctorDetailActivityImage,
          ivDoctorDetailActivityImage, tvDoctorDetailActivity, tvDoctorDetailActivityEmail,
          tvDoctorDetailActivityMobile, tvDoctorDetailActivityName, vpDoctorDetailActivity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
